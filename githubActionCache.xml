<application>
  <component name="GitHubActionCache">
    <option name="actions">
      <map>
        <entry key="actions/checkout@v2">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="clean" value="r[false] def[true] Whether to execute `git clean -ffdx &amp;&amp; git reset --hard HEAD` before fetching" />
                  <entry key="fetch-depth" value="r[false] def[1] Number of commits to fetch. 0 indicates all history for all branches and tags." />
                  <entry key="lfs" value="r[false] def[false] Whether to download Git-LFS files" />
                  <entry key="path" value="r[false] Relative path under $GITHUB_WORKSPACE to place the repository" />
                  <entry key="persist-credentials" value="r[false] def[true] Whether to configure the token or SSH key with the local git config" />
                  <entry key="ref" value="r[false]" />
                  <entry key="repository" value="r[false] def[${{ github.repository }}] Repository name with owner. For example, actions/checkout" />
                  <entry key="set-safe-directory" value="r[false] def[true] Add repository path as safe.directory for Git global config by running `git config --global --add safe.directory &lt;path&gt;`" />
                  <entry key="ssh-key" value="r[false]" />
                  <entry key="ssh-known-hosts" value="r[false]" />
                  <entry key="ssh-strict" value="r[false] def[true]" />
                  <entry key="submodules" value="r[false] def[false]" />
                  <entry key="token" value="r[false] def[${{ github.token }}]" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/actions/checkout/v2/action.yml" />
                  <entry key="expiryTime" value="1705993077553" />
                  <entry key="githubUrl" value="https://github.com/actions/checkout/tree/v2#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSchema" value="false" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="actions/checkout" />
                  <entry key="usesValue" value="actions/checkout@v2" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
        <entry key="actions/setup-node@v2">
          <value>
            <GitHubAction>
              <option name="action" value="true" />
              <option name="inputs">
                <map>
                  <entry key="always-auth" value="r[false] def[false] Set always-auth in npmrc" />
                  <entry key="architecture" value="r[false] Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default." />
                  <entry key="cache" value="r[false] Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm" />
                  <entry key="cache-dependency-path" value="r[false] Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies." />
                  <entry key="check-latest" value="r[false] def[false] Set this option if you want the action to check for the latest available version that satisfies the version spec" />
                  <entry key="node-version" value="r[false] Version Spec of the version to use.  Examples: 12.x, 10.15.1, &gt;=10.15.0" />
                  <entry key="node-version-file" value="r[false] File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version" />
                  <entry key="registry-url" value="r[false] Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN" />
                  <entry key="scope" value="r[false] Optional scope for authenticating against scoped registries" />
                  <entry key="token" value="r[false] def[${{ github.token }}] Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user." />
                  <entry key="version" value="r[false] Deprecated. Use node-version instead. Will not be supported after October 1, 2019" />
                </map>
              </option>
              <option name="metaData">
                <map>
                  <entry key="downloadUrl" value="https://raw.githubusercontent.com/actions/setup-node/v2/action.yml" />
                  <entry key="expiryTime" value="1705993077553" />
                  <entry key="githubUrl" value="https://github.com/actions/setup-node/tree/v2#readme" />
                  <entry key="isAction" value="true" />
                  <entry key="isLocal" value="false" />
                  <entry key="isResolved" value="true" />
                  <entry key="isSchema" value="false" />
                  <entry key="isSuppressed" value="false" />
                  <entry key="name" value="actions/setup-node" />
                  <entry key="usesValue" value="actions/setup-node@v2" />
                </map>
              </option>
              <option name="outputs">
                <map>
                  <entry key="cache-hit" value="r[false] A boolean value to indicate if a cache was hit" />
                </map>
              </option>
            </GitHubAction>
          </value>
        </entry>
      </map>
    </option>
  </component>
</application>